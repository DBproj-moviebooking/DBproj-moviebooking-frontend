{"ast":null,"code":"/**\n * @author Titus Wormer\n * @copyright 2015 Titus Wormer\n * @license MIT\n * @module remark:parse:tokenize:yaml\n * @fileoverview Tokenise YAML.\n */\n'use strict';\n\nmodule.exports = yaml;\nyaml.onlyAtStart = true;\nvar FENCE = '---';\nvar C_DASH = '-';\nvar C_NEWLINE = '\\n';\n/* Tokenise YAML. */\n\nfunction yaml(eat, value, silent) {\n  var self = this;\n  var subvalue;\n  var content;\n  var index;\n  var length;\n  var character;\n  var queue;\n\n  if (!self.options.yaml || value.charAt(0) !== C_DASH || value.charAt(1) !== C_DASH || value.charAt(2) !== C_DASH || value.charAt(3) !== C_NEWLINE) {\n    return;\n  }\n\n  subvalue = FENCE + C_NEWLINE;\n  content = '';\n  queue = '';\n  index = 3;\n  length = value.length;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === C_DASH && (queue || !content) && value.charAt(index + 1) === C_DASH && value.charAt(index + 2) === C_DASH) {\n      /* istanbul ignore if - never used (yet) */\n      if (silent) {\n        return true;\n      }\n\n      subvalue += queue + FENCE;\n      return eat(subvalue)({\n        type: 'yaml',\n        value: content\n      });\n    }\n\n    if (character === C_NEWLINE) {\n      queue += character;\n    } else {\n      subvalue += queue + character;\n      content += queue + character;\n      queue = '';\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}